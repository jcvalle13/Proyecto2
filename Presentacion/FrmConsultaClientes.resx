<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>